{"version":3,"file":"esm-bundle.js","mappings":"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","sources":["webpack://staction/webpack/bootstrap","webpack://staction/webpack/runtime/define property getters","webpack://staction/webpack/runtime/hasOwnProperty shorthand","webpack://staction/./src/Staction.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","type TestSubject = {\n  [Symbol.iterator]: string;\n  [Symbol.asyncIterator]: string;\n};\n\nfunction isIterable(testSubject: TestSubject): boolean {\n  return typeof testSubject[Symbol.iterator] === 'function';\n}\n\nfunction isAsyncIterable(testSubject: TestSubject) {\n  return typeof testSubject[Symbol.asyncIterator] === 'function';\n}\n\nfunction isPromise(obj: any): boolean {\n  return (\n    !!obj &&\n    (typeof obj === 'object' || typeof obj === 'function') &&\n    typeof obj.then === 'function'\n  );\n}\n\nfunction isGeneratorFunction(testSub: any): boolean {\n  return testSub && typeof testSub.next === 'function' && isIterable(testSub);\n}\n\nfunction isAsyncGeneratorFunction(testSub: any): boolean {\n  return (\n    testSub && typeof testSub.next === 'function' && isAsyncIterable(testSub)\n  );\n}\n\ntype WrappedActions<Actions> = {\n  [Action in keyof Actions]: Actions[Action] extends (\n    params: any,\n    ...args: infer Args\n  ) => infer R\n    ? (...args: Args) => Promise<R>\n    : never;\n};\n\ninterface StactionMiddleware {\n  type: 'pre' | 'post';\n  method: Function;\n  meta: object;\n}\n\ninterface StactionMiddlewareParams<State, Meta = object> {\n  state: () => State;\n  name: string;\n  args: any[];\n  meta: Meta;\n}\n\ntype InitState = 'uninitialized' | 'initializing' | 'initialized' | 'initerror';\n\nclass Staction<State, Actions extends { [s: string]: Function }> {\n  private _initState: InitState = 'uninitialized';\n  //@ts-ignore\n  private _actions: Actions; // used to keep reference of actions, so they aren't gc'ed.\n  private _wrappedActions: WrappedActions<Actions> = {} as WrappedActions<Actions>;\n  private _state: State = {} as State;\n  private _stateSetCallback: Function = () => {};\n  private _loggingEnabled: boolean = true;\n  private _addStateToLogs: boolean = false;\n  private _preMiddleware: StactionMiddleware[] = [];\n  private _postMiddleware: StactionMiddleware[] = [];\n\n  init(\n    actions: Actions,\n    initFunc: (actions: object) => any,\n    stateSetCallback: (state: State, actions: Actions) => void\n  ) {\n    try {\n      if (this._initState === 'uninitialized') {\n        this._initState = 'initializing';\n\n        /* wrap actions */\n        this._wrappedActions = Object.entries(actions).reduce(\n          (acc, [name, actionFunc]) => {\n            acc[name] = (...args: any) =>\n              this.actionWrapper(name, actionFunc, ...args);\n            return acc;\n          },\n          {} as { [s: string]: Function }\n        ) as WrappedActions<Actions>;\n\n        /* Keep reference to actions */\n        this._actions = actions;\n\n        /* Set initial state from init function */\n        this._state = initFunc(this._wrappedActions);\n\n        /* set state callback, most likely a setState React method */\n        this._stateSetCallback = stateSetCallback;\n\n        this._initState = 'initialized';\n      } else {\n        let errorMsg = '';\n        switch (this._initState) {\n          case 'initialized':\n            errorMsg = 'Staction instance has already been initialized';\n          case 'initializing':\n            errorMsg = 'Staction instance is currently being initialized';\n          case 'initerror':\n          default:\n            errorMsg =\n              'An error has previously occured when trying to init this instance';\n        }\n\n        throw new Error(errorMsg);\n      }\n    } catch (e) {\n      this._initState = 'initerror';\n      console.error(e);\n    }\n  }\n\n  get actions(): WrappedActions<Actions> {\n    return this._wrappedActions;\n  }\n\n  get state(): State {\n    return this._state;\n  }\n\n  get initialized(): boolean {\n    return this._initState === 'initialized';\n  }\n\n  get initState(): InitState {\n    return this._initState;\n  }\n\n  getState = (): State => {\n    return this._state;\n  };\n\n  /* wraps actions with... the actionWrapper */\n  // wrapActions = (acc: any, actionFunc: Function, name: string) => {\n  //   acc[name] = (...args: any) => this.actionWrapper(name, actionFunc, ...args);\n  //   return acc;\n  // };\n\n  /* injects state and actions as args into actions that are called. */\n  async actionWrapper(\n    name: string,\n    func: Function,\n    ...args: any[]\n  ): Promise<State> {\n    // call the action function with correct args.\n    if (this._loggingEnabled) {\n      if (this._addStateToLogs) {\n        console.log('action: ', name, this._state);\n      } else {\n        console.log('action: ', name);\n      }\n    }\n\n    const params = {\n      state: this.getState,\n      actions: this._wrappedActions,\n      name: name,\n    };\n\n    try {\n      await this.processMiddleware(this._preMiddleware, name, args);\n\n      const newState = func(params, ...args);\n\n      await this.handleActionReturnTypes(newState);\n\n      await this.processMiddleware(this._postMiddleware, name, args);\n\n      if (typeof newState.next !== 'function') {\n        // setState callback is called whenever a generator function yields.\n        this.callSetStateCallback(this._state);\n      }\n\n      return this._state;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /* handles standard values, promises (from async functions) and generator function return values */\n  handleActionReturnTypes = async (newState: any): Promise<void> => {\n    try {\n      if (isPromise(newState)) {\n        this._state = await newState;\n      } else if (isGeneratorFunction(newState)) {\n        for (const g of newState) {\n          await this.handleActionReturnTypes(g);\n\n          this.callSetStateCallback(this._state);\n        }\n      } else if (isAsyncGeneratorFunction(newState)) {\n        for await (const g of newState) {\n          await this.handleActionReturnTypes(g);\n\n          this.callSetStateCallback(this._state);\n        }\n      } else {\n        this._state = newState;\n      }\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  processMiddleware = async (\n    middleware: StactionMiddleware[],\n    name: string,\n    args: any[]\n  ): Promise<void> => {\n    for (const m of middleware) {\n      if (typeof m.method === 'function') {\n        const params: StactionMiddlewareParams<State> = {\n          state: this.getState,\n          name,\n          args,\n          meta: m.meta,\n        };\n\n        const mState = m.method(params);\n\n        await this.handleActionReturnTypes(mState);\n      }\n    }\n  };\n\n  /* Calls the setState callback */\n  callSetStateCallback = (newState: State) => {\n    // call the callback specified in the init method.\n    // NOTE: can do a check to see if state has been changed.\n    this._state = newState;\n    this._stateSetCallback(this._state, this._wrappedActions);\n  };\n\n  setMiddleware = (middleware: StactionMiddleware[]) => {\n    const { pre, post } = Object.groupBy(middleware, ({ type }) => type);\n\n    this._preMiddleware = pre || [];\n    this._postMiddleware = post || [];\n  };\n\n  /* Debugging assist methods */\n  enableLogging = () => {\n    this._loggingEnabled = true;\n    return `Staction logging is enabled`;\n  };\n\n  disableLogging = () => {\n    this._loggingEnabled = false;\n    return `Staction logging is disabled`;\n  };\n\n  disableStateWhenLogging = () => {\n    this._addStateToLogs = false;\n  };\n\n  enableStateWhenLogging = () => {\n    this._addStateToLogs = true;\n  };\n}\n\nexport default Staction;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","e","t","r","n","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","_e","err","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","toString","from","test","arr","len","arr2","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","undefined","_defineProperties","target","props","descriptor","_toPropertyKey","_defineProperty","toPrimitive","String","_toPrimitive","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","isAsyncGeneratorFunction","testSub","Constructor","Staction","_this","instance","_classCallCheck","_state","_ref","_callee","newState","_iterator2","_step2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_g","_context","handleActionReturnTypes","callSetStateCallback","t0","t1","t2","_x","_ref2","_callee2","middleware","_iterator3","_step3","m","_params","mState","_context2","params","state","getState","meta","_x2","_x3","_x4","_stateSetCallback","_wrappedActions","_Object$groupBy","groupBy","_ref3","pre","post","_preMiddleware","_postMiddleware","_loggingEnabled","_addStateToLogs","protoProps","actions","initFunc","stateSetCallback","_this2","this","_initState","errorMsg","entries","reduce","acc","_ref4","_ref5","actionFunc","_len","_key","actionWrapper","concat","_actions","console","_actionWrapper","_callee3","func","_len2","_key2","_args3","_context3","log","processMiddleware","_x5","_x6"],"sourceRoot":""}