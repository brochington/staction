{"version":3,"file":"esm-bundle.js","mappings":"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","sources":["webpack://staction/webpack/bootstrap","webpack://staction/webpack/runtime/define property getters","webpack://staction/webpack/runtime/hasOwnProperty shorthand","webpack://staction/./src/Staction.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","type TestSubject = {\n  [Symbol.iterator]: string;\n  [Symbol.asyncIterator]: string;\n};\n\nfunction isIterable(testSubject: TestSubject): boolean {\n  return typeof testSubject[Symbol.iterator] === 'function';\n}\n\nfunction isAsyncIterable(testSubject: TestSubject) {\n  return typeof testSubject[Symbol.asyncIterator] === 'function';\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return (\n    !!obj &&\n    (typeof obj === 'object' || typeof obj === 'function') &&\n    typeof obj.then === 'function'\n  );\n}\n\nfunction isGeneratorFunction(testSub: any): boolean {\n  return testSub && typeof testSub.next === 'function' && isIterable(testSub);\n}\n\nfunction isAsyncGeneratorFunction(testSub: any): boolean {\n  return (\n    testSub && typeof testSub.next === 'function' && isAsyncIterable(testSub)\n  );\n}\n\ntype WrappedActions<Actions, PassedMapType = Map<any, any>> = {\n  [Action in keyof Actions]: Actions[Action] extends (\n    params: any,\n    ...args: infer Args\n  ) => any\n    ? (...args: Args) => Promise<{ state: any; passed: PassedMapType }>\n    : never;\n};\n\ninterface StactionMiddleware {\n  type: 'pre' | 'post';\n  method: Function;\n  meta: object;\n}\n\ninterface StactionMiddlewareParams<State, Meta = object> {\n  state: () => State;\n  name: string;\n  args: any[];\n  meta: Meta;\n}\n\ntype InitState = 'uninitialized' | 'initializing' | 'initialized' | 'initerror';\n\nclass Staction<\n  State,\n  Actions extends { [s: string]: Function },\n  PassedMapType = Map<any, any>\n> {\n  private _initState: InitState = 'uninitialized';\n  //@ts-ignore\n  private _actions: Actions; // used to keep reference of actions, so they aren't gc'ed.\n  private _wrappedActions: WrappedActions<Actions, PassedMapType> =\n    {} as WrappedActions<Actions, PassedMapType>;\n  private _state: State = {} as State;\n  private _stateSetCallback: Function = () => {};\n  private _loggingEnabled: boolean = true;\n  private _addStateToLogs: boolean = false;\n  private _preMiddleware: StactionMiddleware[] = [];\n  private _postMiddleware: StactionMiddleware[] = [];\n\n  async init(\n    actions: Actions,\n    initFunc: (actions: WrappedActions<Actions, PassedMapType>) => Promise<State> | State,\n    stateSetCallback: (state: State, actions: WrappedActions<Actions, PassedMapType>) => void\n  ) {\n    if (this._initState !== 'uninitialized') {\n      let errorMsg = '';\n      switch (this._initState) {\n        case 'initialized':\n          errorMsg = 'Staction instance has already been initialized';\n          break;\n        case 'initializing':\n          errorMsg = 'Staction instance is currently being initialized';\n          break;\n        case 'initerror':\n        default:\n          errorMsg =\n            'An error has previously occured when trying to init this instance';\n          break;\n      }\n      const err = new Error(errorMsg);\n      console.error(err); // Maintain original behavior of logging this type of error\n      throw err; // Throw the error, _initState remains unchanged by this block\n    }\n    \n    try {\n      this._initState = 'initializing';\n\n      /* set state callback, most likely a setState React method */\n      this._stateSetCallback = stateSetCallback;\n      \n      /* wrap actions */\n      this._wrappedActions = Object.entries(actions).reduce(\n        (acc, [name, actionFunc]) => {\n          acc[name] = (...args: any) =>\n            this.actionWrapper(name, actionFunc, ...args);\n          return acc;\n        },\n        {} as { [s: string]: Function }\n      ) as WrappedActions<Actions, PassedMapType>;\n\n      /* Keep reference to actions */\n      this._actions = actions;\n\n\n      /* Set initial state from init function, awaiting it if it's a promise */\n      const initialStateCandidate = initFunc(this._wrappedActions);\n      if (isPromise(initialStateCandidate)) {\n        this._state = await initialStateCandidate;\n      } else {\n        this._state = initialStateCandidate;\n      }\n\n      this._initState = 'initialized';\n      // Do NOT call _stateSetCallback here after init. It's called by actions.\n    } catch (e) {\n      // This catch is for errors during the actual initialization process\n      this._initState = 'initerror';\n      console.error(e);\n      throw e;\n    }\n  }\n\n  get actions(): WrappedActions<Actions, PassedMapType> {\n    return this._wrappedActions;\n  }\n\n  get state(): State {\n    return this._state;\n  }\n\n  get initialized(): boolean {\n    return this._initState === 'initialized';\n  }\n\n  get initState(): InitState {\n    return this._initState;\n  }\n\n  getState = (): State => {\n    return this._state;\n  };\n\n  /* injects state and actions as args into actions that are called. */\n  async actionWrapper(\n    name: string,\n    func: Function,\n    ...args: any[]\n  ): Promise<{ state: State; passed: PassedMapType }> {\n    // call the action function with correct args.\n    if (this._loggingEnabled) {\n      if (this._addStateToLogs) {\n        console.log('action: ', name, this._state);\n      } else {\n        console.log('action: ', name);\n      }\n    }\n\n    let passedMap: PassedMapType = new Map() as PassedMapType;\n\n    const updatePassedMap = (\n      updater: PassedMapType | ((currentMap: PassedMapType) => PassedMapType)\n    ) => {\n      if (typeof updater === 'function') {\n        passedMap = (updater as Function)(passedMap);\n      } else {\n        if (updater instanceof Map) {\n          // Assuming updater is a Map, merge its contents\n          for (const [key, value] of (updater as Map<any, any>).entries()) {\n            (passedMap as Map<any, any>).set(key, value);\n          }\n        } else {\n          throw new Error('Invalid updater type. Must be a function or a Map.');\n        }\n      }\n    };\n\n    const params = {\n      state: this.getState,\n      actions: this._wrappedActions,\n      passed: updatePassedMap,\n      name: name,\n    };\n\n    try {\n      await this.processMiddleware(this._preMiddleware, name, args);\n\n      const newState = func(params, ...args);\n\n      await this.handleActionReturnTypes(newState);\n\n      await this.processMiddleware(this._postMiddleware, name, args);\n\n      if (!isGeneratorFunction(newState) && !isAsyncGeneratorFunction(newState)) {\n        // setState callback is called whenever a generator function yields.\n        // Or when a normal action/promise resolves.\n        this.callSetStateCallback(this._state);\n      }\n\n      return { state: this._state, passed: passedMap };\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /* handles standard values, promises (from async functions) and generator function return values */\n  handleActionReturnTypes = async (newState: any): Promise<void> => {\n    try {\n      if (isPromise(newState)) {\n        this._state = await newState;\n      } else if (isGeneratorFunction(newState)) {\n        let result = newState.next();\n        while (!result.done) {\n          await this.handleActionReturnTypes(result.value);\n          this.callSetStateCallback(this._state);\n          result = newState.next();\n        }\n        // Process the final return value if it exists\n        if (result.value !== undefined) {\n          await this.handleActionReturnTypes(result.value);\n          this.callSetStateCallback(this._state);\n        }\n      } else if (isAsyncGeneratorFunction(newState)) {\n        let result = await newState.next();\n        while (!result.done) {\n          await this.handleActionReturnTypes(result.value);\n          this.callSetStateCallback(this._state);\n          result = await newState.next();\n        }\n        // Process the final return value\n        if (result.value !== undefined) {\n          await this.handleActionReturnTypes(result.value);\n          this.callSetStateCallback(this._state);\n        }\n      } else {\n        if (newState !== undefined) {\n          this._state = newState;\n        }\n      }\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  processMiddleware = async (\n    middleware: StactionMiddleware[],\n    name: string,\n    args: any[]\n  ): Promise<void> => {\n    for (const m of middleware) {\n      if (typeof m.method === 'function') {\n        const params: StactionMiddlewareParams<State> = {\n          state: this.getState,\n          name,\n          args,\n          meta: m.meta,\n        };\n\n        const mReturnedValue = m.method(params);\n        let mStateToProcess;\n\n        // If middleware returns raw undefined (not a promise/generator that might resolve to undefined),\n        // interpret it as implicitly returning the current state, aligning with the philosophy\n        // that middleware should always yield a state.\n        if (mReturnedValue === undefined &&\n            !isPromise(mReturnedValue) && // Redundant check if === undefined, but good for clarity\n            !isGeneratorFunction(mReturnedValue) &&\n            !isAsyncGeneratorFunction(mReturnedValue)) {\n            mStateToProcess = params.state(); // Pass current state along\n        } else {\n            mStateToProcess = mReturnedValue;\n        }\n\n        await this.handleActionReturnTypes(mStateToProcess);\n      }\n    }\n  };\n\n  /* Calls the setState callback */\n  callSetStateCallback = (newState: State) => {\n    // call the callback specified in the init method.\n    // NOTE: can do a check to see if state has been changed.\n    this._state = newState;\n    this._stateSetCallback(this._state, this._wrappedActions);\n  };\n\n  setMiddleware = (middleware: StactionMiddleware[]) => {\n    const grouped = middleware.reduce<{ pre: StactionMiddleware[], post: StactionMiddleware[] }>((acc, mw) => {\n      if (mw.type === 'pre') {\n        acc.pre.push(mw);\n      } else if (mw.type === 'post') {\n        acc.post.push(mw);\n      }\n      return acc;\n    }, { pre: [], post: [] });\n\n    this._preMiddleware = grouped.pre;\n    this._postMiddleware = grouped.post;\n  };\n\n  /* Debugging assist methods */\n  enableLogging = () => {\n    this._loggingEnabled = true;\n    return `Staction logging is enabled`;\n  };\n\n  disableLogging = () => {\n    this._loggingEnabled = false;\n    return `Staction logging is disabled`;\n  };\n\n  disableStateWhenLogging = () => {\n    this._addStateToLogs = false;\n  };\n\n  enableStateWhenLogging = () => {\n    this._addStateToLogs = true;\n  };\n}\n\nexport default Staction;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","r","t","e","n","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","value","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","_defineProperty","toPrimitive","String","_toPrimitive","isPromise","testSub","isAsyncGeneratorFunction","Staction","_this","_classCallCheck","_state","_ref","_callee","newState","result","_result","_context","handleActionReturnTypes","callSetStateCallback","undefined","t0","_x","_ref2","_callee2","middleware","args","_iterator","_step","_params","mReturnedValue","mStateToProcess","_context2","_createForOfIteratorHelper","params","state","getState","meta","_x2","_x3","_x4","_stateSetCallback","_wrappedActions","grouped","reduce","acc","mw","pre","post","_preMiddleware","_postMiddleware","_loggingEnabled","_addStateToLogs","_init","_callee3","actions","initFunc","stateSetCallback","errorMsg","err","initialStateCandidate","_this2","_context3","this","_initState","console","error","entries","_ref3","_ref4","_slicedToArray","actionFunc","_len","Array","_key","actionWrapper","concat","_actions","t1","_x5","_x6","_x7","_actionWrapper","_callee4","func","passedMap","updatePassedMap","_len2","_key2","_args4","_context4","log","Map","updater","_step2","_iterator2","_step2$value","set","passed","processMiddleware","_x8","_x9"],"sourceRoot":""}