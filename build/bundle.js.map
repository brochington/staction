{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://staction/webpack/universalModuleDefinition","webpack://staction/webpack/bootstrap","webpack://staction/webpack/runtime/define property getters","webpack://staction/webpack/runtime/hasOwnProperty shorthand","webpack://staction/webpack/runtime/make namespace object","webpack://staction/./src/Staction.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"staction\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"staction\"] = factory();\n\telse\n\t\troot[\"staction\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","type TestSubject = {\n  [Symbol.iterator]: string;\n  [Symbol.asyncIterator]: string;\n};\n\nfunction isIterable(testSubject: TestSubject): boolean {\n  return typeof testSubject[Symbol.iterator] === 'function';\n}\n\nfunction isAsyncIterable(testSubject: TestSubject) {\n  return typeof testSubject[Symbol.asyncIterator] === 'function';\n}\n\nfunction isPromise(obj: any): boolean {\n  return (\n    !!obj &&\n    (typeof obj === 'object' || typeof obj === 'function') &&\n    typeof obj.then === 'function'\n  );\n}\n\nfunction isGeneratorFunction(testSub: any): boolean {\n  return testSub && typeof testSub.next === 'function' && isIterable(testSub);\n}\n\nfunction isAsyncGeneratorFunction(testSub: any): boolean {\n  return (\n    testSub && typeof testSub.next === 'function' && isAsyncIterable(testSub)\n  );\n}\n\ntype WrappedActions<Actions> = {\n  [Action in keyof Actions]: Actions[Action] extends (\n    params: any,\n    ...args: infer Args\n  ) => infer R\n    ? (...args: Args) => Promise<R>\n    : never;\n};\n\ninterface StactionMiddleware {\n  type: 'pre' | 'post';\n  method: Function;\n  meta: object;\n}\n\ninterface StactionMiddlewareParams<State, Meta = object> {\n  state: () => State;\n  name: string;\n  args: any[];\n  meta: Meta;\n}\n\ntype InitState = 'uninitialized' | 'initializing' | 'initialized' | 'initerror';\n\nclass Staction<State, Actions extends { [s: string]: Function }> {\n  private _initState: InitState = 'uninitialized';\n  //@ts-ignore\n  private _actions: Actions; // used to keep reference of actions, so they aren't gc'ed.\n  private _wrappedActions: WrappedActions<Actions> = {} as WrappedActions<Actions>;\n  private _state: State = {} as State;\n  private _stateSetCallback: Function = () => {};\n  private _loggingEnabled: boolean = true;\n  private _addStateToLogs: boolean = false;\n  private _preMiddleware: StactionMiddleware[] = [];\n  private _postMiddleware: StactionMiddleware[] = [];\n\n  init(\n    actions: Actions,\n    initFunc: (actions: object) => any,\n    stateSetCallback: (state: State, actions: Actions) => void\n  ) {\n    try {\n      if (this._initState === 'uninitialized') {\n        this._initState = 'initializing';\n\n        /* wrap actions */\n        this._wrappedActions = Object.entries(actions).reduce(\n          (acc, [name, actionFunc]) => {\n            acc[name] = (...args: any) =>\n              this.actionWrapper(name, actionFunc, ...args);\n            return acc;\n          },\n          {} as { [s: string]: Function }\n        ) as WrappedActions<Actions>;\n\n        /* Keep reference to actions */\n        this._actions = actions;\n\n        /* Set initial state from init function */\n        this._state = initFunc(this._wrappedActions);\n\n        /* set state callback, most likely a setState React method */\n        this._stateSetCallback = stateSetCallback;\n\n        this._initState = 'initialized';\n      } else {\n        let errorMsg = '';\n        switch (this._initState) {\n          case 'initialized':\n            errorMsg = 'Staction instance has already been initialized';\n          case 'initializing':\n            errorMsg = 'Staction instance is currently being initialized';\n          case 'initerror':\n          default:\n            errorMsg =\n              'An error has previously occured when trying to init this instance';\n        }\n\n        throw new Error(errorMsg);\n      }\n    } catch (e) {\n      this._initState = 'initerror';\n      console.error(e);\n    }\n  }\n\n  get actions(): WrappedActions<Actions> {\n    return this._wrappedActions;\n  }\n\n  get state(): State {\n    return this._state;\n  }\n\n  get initialized(): boolean {\n    return this._initState === 'initialized';\n  }\n\n  get initState(): InitState {\n    return this._initState;\n  }\n\n  getState = (): State => {\n    return this._state;\n  };\n\n  /* wraps actions with... the actionWrapper */\n  // wrapActions = (acc: any, actionFunc: Function, name: string) => {\n  //   acc[name] = (...args: any) => this.actionWrapper(name, actionFunc, ...args);\n  //   return acc;\n  // };\n\n  /* injects state and actions as args into actions that are called. */\n  async actionWrapper(\n    name: string,\n    func: Function,\n    ...args: any[]\n  ): Promise<State> {\n    // call the action function with correct args.\n    if (this._loggingEnabled) {\n      if (this._addStateToLogs) {\n        console.log('action: ', name, this._state);\n      } else {\n        console.log('action: ', name);\n      }\n    }\n\n    const params = {\n      state: this.getState,\n      actions: this._wrappedActions,\n      name: name,\n    };\n\n    try {\n      await this.processMiddleware(this._preMiddleware, name, args);\n\n      const newState = func(params, ...args);\n\n      await this.handleActionReturnTypes(newState);\n\n      await this.processMiddleware(this._postMiddleware, name, args);\n\n      if (typeof newState.next !== 'function') {\n        // setState callback is called whenever a generator function yields.\n        this.callSetStateCallback(this._state);\n      }\n\n      return this._state;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /* handles standard values, promises (from async functions) and generator function return values */\n  handleActionReturnTypes = async (newState: any): Promise<void> => {\n    try {\n      if (isPromise(newState)) {\n        this._state = await newState;\n      } else if (isGeneratorFunction(newState)) {\n        for (const g of newState) {\n          await this.handleActionReturnTypes(g);\n\n          this.callSetStateCallback(this._state);\n        }\n      } else if (isAsyncGeneratorFunction(newState)) {\n        for await (const g of newState) {\n          await this.handleActionReturnTypes(g);\n\n          this.callSetStateCallback(this._state);\n        }\n      } else {\n        this._state = newState;\n      }\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  processMiddleware = async (\n    middleware: StactionMiddleware[],\n    name: string,\n    args: any[]\n  ): Promise<void> => {\n    for (const m of middleware) {\n      if (typeof m.method === 'function') {\n        const params: StactionMiddlewareParams<State> = {\n          state: this.getState,\n          name,\n          args,\n          meta: m.meta,\n        };\n\n        const mState = m.method(params);\n\n        await this.handleActionReturnTypes(mState);\n      }\n    }\n  };\n\n  /* Calls the setState callback */\n  callSetStateCallback = (newState: State) => {\n    // call the callback specified in the init method.\n    // NOTE: can do a check to see if state has been changed.\n    this._state = newState;\n    this._stateSetCallback(this._state, this._wrappedActions);\n  };\n\n  setMiddleware = (middleware: StactionMiddleware[]) => {\n    const { pre, post } = Object.groupBy(middleware, ({ type }) => type);\n\n    this._preMiddleware = pre || [];\n    this._postMiddleware = post || [];\n  };\n\n  /* Debugging assist methods */\n  enableLogging = () => {\n    this._loggingEnabled = true;\n    return `Staction logging is enabled`;\n  };\n\n  disableLogging = () => {\n    this._loggingEnabled = false;\n    return `Staction logging is disabled`;\n  };\n\n  disableStateWhenLogging = () => {\n    this._addStateToLogs = false;\n  };\n\n  enableStateWhenLogging = () => {\n    this._addStateToLogs = true;\n  };\n}\n\nexport default Staction;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_regeneratorRuntime","e","t","r","n","i","a","iterator","c","asyncIterator","u","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","_e","err","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","toString","from","test","arr","len","arr2","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","args","arguments","apply","undefined","_defineProperties","target","props","descriptor","_toPropertyKey","_defineProperty","toPrimitive","String","_toPrimitive","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","isAsyncGeneratorFunction","testSub","Constructor","Staction","_this","instance","_classCallCheck","_state","_ref","_callee","newState","_iterator2","_step2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_g","_context","handleActionReturnTypes","callSetStateCallback","t0","t1","t2","_x","_ref2","_callee2","middleware","_iterator3","_step3","m","_params","mState","_context2","params","state","getState","meta","_x2","_x3","_x4","_stateSetCallback","_wrappedActions","_Object$groupBy","groupBy","_ref3","pre","post","_preMiddleware","_postMiddleware","_loggingEnabled","_addStateToLogs","protoProps","actions","initFunc","stateSetCallback","_this2","this","_initState","errorMsg","entries","reduce","acc","_ref4","_ref5","actionFunc","_len","_key","actionWrapper","concat","_actions","console","_actionWrapper","_callee3","func","_len2","_key2","_args3","_context3","log","processMiddleware","_x5","_x6"],"sourceRoot":""}